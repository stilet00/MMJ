---
import Layout from '../layouts/Layout.astro';
import background from '../assets/background.svg';

// Импортим все JPG из папки assets (eager чтобы сразу получить URL)
const modules = import.meta.glob('../assets/*.jpg', { eager: true, as: 'url' });

// Собираем массив { number, title, src }
const images = Object.entries(modules).map(([path, url]) => {
  const file = path.split('/').pop();                // e.g. "17-Calavera.jpg"
  const name = file?.replace(/\.jpg$/, '');           // "17-Calavera"
  const [number, rawTitle] = name?.split('-', 2) ?? ['', ''];     // ["17", "Calavera"]
  const title = rawTitle.replace(/_/g, ' ');         // на случай пробелов-черточек
  return { number, title, src: url };
}).sort((a, b) => Number(a.number) - Number(b.number));
---

<Layout>
  <img id="background" src={background.src} alt="" fetchpriority="high" />
  <div class="search-container">
    <input id="search" type="text" placeholder="По номеру…" />
  </div>

  <div id="gallery">
    {images.map(image => (
      <div class="image-card" data-number={image.number}>
        <img src={image.src} alt={`#${image.number} — ${image.title}`} />
        <p>#{image.number} — {image.title}</p>
      </div>
    ))}
  </div>

  <script is:inline client:load>
    const input = document.getElementById('search');
    const cards = document.querySelectorAll('.image-card');
    input.addEventListener('input', () => {
      const q = input.value.trim();
      cards.forEach(card => {
        const num = card.dataset.number;
        card.style.display = num.includes(q) ? '' : 'none';
      });
    });
  </script>
</Layout>


<style>
	#background {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		z-index: -1;
		filter: blur(100px);
	}

	#container {
		font-family: Inter, Roboto, 'Helvetica Neue', 'Arial Nova', 'Nimbus Sans', Arial, sans-serif;
		height: 100%;
	}

	main {
		height: 100%;
		display: flex;
		justify-content: center;
	}

	#hero {
		display: flex;
		align-items: start;
		flex-direction: column;
		justify-content: center;
		padding: 16px;
	}

	h1 {
		font-size: 22px;
		margin-top: 0.25em;
	}

	#links {
		display: flex;
		gap: 16px;
	}

	#links a {
		display: flex;
		align-items: center;
		padding: 10px 12px;
		color: #111827;
		text-decoration: none;
		transition: color 0.2s;
	}

	#links a:hover {
		color: rgb(78, 80, 86);
	}

	#links a svg {
		height: 1em;
		margin-left: 8px;
	}

	#links a.button {
		color: white;
		background: linear-gradient(83.21deg, #3245ff 0%, #bc52ee 100%);
		box-shadow:
			inset 0 0 0 1px rgba(255, 255, 255, 0.12),
			inset 0 -2px 0 rgba(0, 0, 0, 0.24);
		border-radius: 10px;
	}

	#links a.button:hover {
		color: rgb(230, 230, 230);
		box-shadow: none;
	}

	pre {
		font-family:
			ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono',
			monospace;
		font-weight: normal;
		background: linear-gradient(14deg, #d83333 0%, #f041ff 100%);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-clip: text;
		margin: 0;
	}

	h2 {
		margin: 0 0 1em;
		font-weight: normal;
		color: #111827;
		font-size: 20px;
	}

	p {
		color: #4b5563;
		font-size: 16px;
		line-height: 24px;
		letter-spacing: -0.006em;
		margin: 0;
	}

	code {
		display: inline-block;
		background:
			linear-gradient(66.77deg, #f3cddd 0%, #f5cee7 100%) padding-box,
			linear-gradient(155deg, #d83333 0%, #f041ff 18%, #f5cee7 45%) border-box;
		border-radius: 8px;
		border: 1px solid transparent;
		padding: 6px 8px;
	}

	.box {
		padding: 16px;
		background: rgba(255, 255, 255, 1);
		border-radius: 16px;
		border: 1px solid white;
	}

	#news {
		position: absolute;
		bottom: 16px;
		right: 16px;
		max-width: 300px;
		text-decoration: none;
		transition: background 0.2s;
		backdrop-filter: blur(50px);
	}

	#news:hover {
		background: rgba(255, 255, 255, 0.55);
	}

	@media screen and (max-height: 368px) {
		#news {
			display: none;
		}
	}

	@media screen and (max-width: 768px) {
		#container {
			display: flex;
			flex-direction: column;
		}

		#hero {
			display: block;
			padding-top: 10%;
		}

		#links {
			flex-wrap: wrap;
		}

		#links a.button {
			padding: 14px 18px;
		}

		#news {
			right: 16px;
			left: 16px;
			bottom: 2.5rem;
			max-width: 100%;
		}

		h1 {
			line-height: 1.5;
		}
	}
</style>